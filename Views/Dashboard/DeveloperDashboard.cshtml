@{
    ViewData["Title"] = "Developer Dashboard";
}

<!-- Include shared dashboard header -->
@await Html.PartialAsync("_DashboardHeader")

<div class="p-6 bg-white rounded-xl shadow-lg mt-8">
    <h3 class="mt-4">Your Developer Tools</h3>

    <div class="row mt-4">
        <div class="col-md-4">
            <a class="card text-center shadow-sm p-4 text-decoration-none" href="/Tasks/Index">
                <h4>Development Tasks</h4>
                <p>View, create, and manage your coding tasks</p>
            </a>
        </div>
        <div class="col-md-4">
            <a class="card text-center shadow-sm p-4 text-decoration-none" href="/Tickets/Index">
                <h4>Bug Tickets</h4>
                <p>Review and resolve assigned issues</p>
            </a>
        </div>
        <div class="col-md-4">
            <a class="card text-center shadow-sm p-4 text-decoration-none" href="/Projects/Index">
                <h4>Projects</h4>
                <p>Track progress and collaborate on builds</p>
            </a>
        </div>
    </div>

    <div class="text-center">
        <h2 class="text-3xl font-bold text-gray-800">Omnitrack Project Analytics</h2>
        <p class="mt-2 text-gray-600 max-w-2xl mx-auto">
            This dashboard provides a clear overview of ticket distribution within your projects. Visualize the number of tickets created and assigned to each team member to gain insight into workload and productivity.
        </p>
    </div>

    <div class="flex flex-col md:flex-row items-center justify-center p-4 bg-blue-50 rounded-lg shadow-inner mb-6 space-y-4 md:space-y-0 md:space-x-4">
        <span class="text-xl font-medium text-gray-800">Total Tickets:</span>
        <span id="totalTicketsCount" class="ml-2 text-2xl font-bold text-blue-600"></span>
        <!-- Report generation buttons and loading indicator -->
        <div class="flex-grow flex justify-end space-x-2 md:space-x-4">
            <button id="generateCsv" class="px-4 py-2 bg-green-500 text-white font-semibold rounded-lg shadow-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75 transition-all">
                Download CSV
            </button>
            <button id="generateDoc" class="px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 transition-all">
                Download Word
            </button>
            <button id="generatePdf" class="px-4 py-2 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-opacity-75 transition-all">
                Download PDF
            </button>
        </div>
    </div>

    <hr class="my-6 border-gray-300" />
    <div class="flex flex-col md:flex-row space-y-8 md:space-y-0 md:space-x-8">
        <div class="w-full md:w-1/2 bg-gray-50 p-4 rounded-xl shadow-md">
            <h3 class="text-lg font-semibold text-center mb-4">Tickets Created by User</h3>
            <canvas id="createdTicketsChart"></canvas>
        </div>
        <div class="w-full md:w-1/2 bg-gray-50 p-4 rounded-xl shadow-md">
            <h3 class="text-lg font-semibold text-center mb-4">Tickets Assigned to User</h3>
            <canvas id="assignedTicketsChart"></canvas>
        </div>
        <div class="w-full md:w-1/2 bg-gray-50 p-4 rounded-xl shadow-md">
            <h3 class="text-lg font-semibold text-center mb-4">Tickets by Status</h3>
            <canvas id="statusTicketsChart"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to fetch data and render charts
            function fetchAndRenderCharts() {
                $.getJSON('/Tickets/ChartData', function (data) {
                    const createdLabels = Object.keys(data.created);
                    const createdCounts = Object.values(data.created);
                    const assignedLabels = Object.keys(data.assigned);
                    const assignedCounts = Object.values(data.assigned);

                    const totalTickets = createdCounts.reduce((sum, count) => sum + count, 0);
                    document.getElementById('totalTicketsCount').textContent = totalTickets;

                    new Chart(document.getElementById('createdTicketsChart'), {
                        type: 'pie',
                        data: {
                            labels: createdLabels,
                            datasets: [{
                                label: 'Tickets Created',
                                data: createdCounts,
                                backgroundColor: [
                                    'rgba(44, 130, 201, 0.6)',
                                    'rgba(255, 165, 0, 0.6)',
                                    'rgba(119, 221, 119, 0.6)',
                                    'rgba(128, 0, 128, 0.6)',
                                    'rgba(105, 105, 105, 0.6)'
                                ],
                                borderColor: [
                                    'rgba(44, 130, 201, 1)',
                                    'rgba(255, 165, 0, 1)',
                                    'rgba(119, 221, 119, 1)',
                                    'rgba(128, 0, 128, 1)',
                                    'rgba(105, 105, 105, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: { position: 'top' },
                                title: { display: true, text: 'Tickets Created Per User' }
                            }
                        }
                    });

                    new Chart(document.getElementById('assignedTicketsChart'), {
                        type: 'bar',
                        data: {
                            labels: assignedLabels,
                            datasets: [{
                                label: 'Tickets Assigned',
                                data: assignedCounts,
                                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: { display: false },
                                title: { display: true, text: 'Tickets Assigned Per User' }
                            },
                            scales: {
                                y: { beginAtZero: true }
                            }
                        }
                    });
                });

                $.getJSON('/Tickets/StatusChartData', function (statusData) {
                    const statusLabels = Object.keys(statusData);
                    const statusCounts = Object.values(statusData);

                    new Chart(document.getElementById('statusTicketsChart'), {
                        type: 'doughnut',
                        data: {
                            labels: statusLabels,
                            datasets: [{
                                label: 'Tickets by Status',
                                data: statusCounts,
                                backgroundColor: [
                                    'rgba(54, 162, 235, 0.6)',    // To Do (Blue)
                                    'rgba(255, 206, 86, 0.6)',    // In Progress (Yellow)
                                    'rgba(255, 99, 132, 0.6)',    // Blocker (Red)
                                    'rgba(75, 192, 192, 0.6)',    // Done (Green)
                                ],
                                borderColor: [
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(75, 192, 192, 1)',
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: { position: 'top' },
                                title: { display: true, text: 'Tickets by Status' }
                            }
                        }
                    });
                });
            }

            fetchAndRenderCharts();

            // Function to generate CSV and trigger download
            function generateCsvReport(data) {
                const headers = Object.keys(data[0]);
                const csvRows = [
                    headers.join(','),
                    ...data.map(row => headers.map(fieldName => JSON.stringify(row[fieldName] || '')).join(','))
                ];
                const csvString = csvRows.join('\n');
                const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.setAttribute('download', 'omnitrack_report.csv');
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }

            // Function to generate Word document
            function generateDocReport(data) {
                let tableHtml = `<style>
                    body { font-family: sans-serif; }
                    table { width: 100%; border-collapse: collapse; }
                    th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }
                    th { background-color: #f2f2f2; }
                </style>
                <h1>Omnitrack Ticket Report</h1>
                <table><thead><tr>`;
                const headers = Object.keys(data[0]);
                headers.forEach(header => {
                    tableHtml += `<th>${header}</th>`;
                });
                tableHtml += `</tr></thead><tbody>`;

                data.forEach(row => {
                    tableHtml += `<tr>`;
                    headers.forEach(header => {
                        tableHtml += `<td>${row[header] || ''}</td>`;
                    });
                    tableHtml += `</tr>`;
                });
                tableHtml += `</tbody></table>`;

                const blob = new Blob([tableHtml], { type: 'application/msword' });
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.setAttribute('download', 'omnitrack_report.doc');
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }

            // Function to generate PDF report
            function generatePdfReport(data) {
                if (typeof window.jspdf === 'undefined') {
                    console.error("jsPDF library not loaded. Make sure the CDN script tag is correct.");
                    return;
                }
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();

                doc.text("Omnitrack Ticket Report", 10, 10);

                const headers = Object.keys(data[0]);
                const tableData = data.map(obj => Object.values(obj));

                doc.autoTable({
                    head: [headers],
                    body: tableData,
                    startY: 20
                });

                doc.save("omnitrack_report.pdf");
            }

            // Attach event listeners to the buttons
            $('#generateCsv').on('click', function () {
                $.getJSON('/Tickets/GetReportData', function (data) {
                    if (data && data.length > 0) {
                        generateCsvReport(data);
                    } else {
                        console.error("No data to generate CSV.");
                    }
                });
            });

            $('#generateDoc').on('click', function () {
                $.getJSON('/Tickets/GetReportData', function (data) {
                    if (data && data.length > 0) {
                        generateDocReport(data);
                    } else {
                        console.error("No data to generate Word document.");
                    }
                });
            });

            $('#generatePdf').on('click', function () {
                $.getJSON('/Tickets/GetReportData', function (data) {
                    if (data && data.length > 0) {
                        generatePdfReport(data);
                    } else {
                        console.error("No data to generate PDF.");
                    }
                });
            });

        });
    </script>



}