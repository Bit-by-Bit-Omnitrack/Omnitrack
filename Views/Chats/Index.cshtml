@model IEnumerable<UserRoles.Models.Chats>

@{
    ViewData["Title"] = "Chats";
}

<style>
    .chat-container {
        max-width: 750px;
        margin: auto;
    }

    .chat-group {
        margin-bottom: 2rem;
    }

    .chat-message {
        margin-bottom: 1rem;
        padding: 1rem;
        border: 1px solid #ddd;
        border-radius: 6px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .chat-message.right {
        background-color: #eaf6ff;
        text-align: right;
    }

    .chat-message.left {
        background-color: #f9f9f9;
        text-align: left;
    }

    .badge {
        font-size: 0.75rem;
    }

    .initials-circle {
        display: inline-block;
        width: 28px;
        height: 28px;
        line-height: 28px;
        border-radius: 50%;
        background-color: #007bff;
        color: white;
        text-align: center;
        font-weight: bold;
        margin-right: 8px;
        font-size: 0.9rem;
    }

    .empty-message {
        text-align: center;
        color: #888;
        margin-top: 2rem;
    }
</style>

<h2 class="mb-4 text-center">Chats</h2>

<div class="text-center mb-4">
    <a asp-action="Create" class="btn btn-primary">+ New Message</a>
</div>

<div class="chat-container">
    @if (Model != null && Model.Any())
    {
        foreach (var ticketGroup in Model.GroupBy(c => c.TicketId))
        {
            <div class="chat-group">
                <h5 class="mb-3">Ticket #@ticketGroup.Key</h5>

                @foreach (var item in ticketGroup.OrderBy(c => c.SentAt))
                {
                    var isCurrentUser = item.Sender == User.Identity.Name;
                    var alignmentClass = isCurrentUser ? "right" : "left";
                    var initials = !string.IsNullOrWhiteSpace(item.Sender) && item.Sender.Length >= 2
                    ? item.Sender.Substring(0, 2).ToUpper()
                    : "??";

                    <div class="chat-message @alignmentClass">
                        <div class="d-flex justify-content-between">
                            <div>
                                <span class="initials-circle">@initials</span>
                                <strong>@item.Sender</strong>
                                <span class="badge badge-secondary ml-2">@item.Status</span>
                                <span class="badge badge-info ml-2">@item.RoleTag</span>
                            </div>
                            <small class="text-muted">@item.SentAt.ToString("g")</small>
                        </div>

                        <div class="mt-2 text-dark">
                            @item.Message
                        </div>

                        @if (!string.IsNullOrEmpty(item.AttachmentPath))
                        {
                            <div class="mt-1">
                                📎 <a href="@item.AttachmentPath" target="_blank">Download attachment</a>
                            </div>
                        }

                        <div class="mt-2">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary mr-2">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info mr-2">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                        </div>
                    </div>
                }
            </div>
        }
    }
    else
    {
        <div class="empty-message">
            <p>No chat messages to display.</p>
        </div>
    }
</div>